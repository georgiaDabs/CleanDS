#BlueJ class context
comment0.target=ReplicaManager
comment1.params=
comment1.target=ReplicaManager()
comment10.params=
comment10.target=void\ gossip()
comment11.params=movieName
comment11.target=java.lang.String\ queryMovie(java.lang.String)
comment12.params=movieId\ userId
comment12.target=Result\ deleteReview(int,\ int)
comment13.params=movieId\ userId\ newRating
comment13.target=java.lang.String\ updateMovie(int,\ int,\ double)
comment14.params=movieName\ userId
comment14.target=Result\ deleteReview(java.lang.String,\ int)
comment15.params=moviename\ userId\ newRating
comment15.target=java.lang.String\ updateMovie(java.lang.String,\ int,\ double)
comment16.params=name
comment16.target=boolean\ isMovie(java.lang.String)
comment17.params=
comment17.target=void\ ping()
comment18.params=id
comment18.target=boolean\ isMovie(int)
comment19.params=servers
comment19.target=int\ mostUpToDate(java.util.ArrayList)
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ initiateStubs()
comment4.params=
comment4.target=java.util.ArrayList\ resetStubs()
comment5.params=
comment5.target=void\ changeStates()
comment6.params=rating\ userId\ movieName
comment6.target=java.lang.String\ sendRating(double,\ int,\ java.lang.String)
comment7.params=rating\ userId\ movieID
comment7.target=java.lang.String\ sendRating(double,\ int,\ int)
comment8.params=
comment8.target=void\ allOffline()
comment9.params=movieID
comment9.target=java.lang.String\ queryMovie(int)
numComments=20
